generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  password     String
  firstName    String
  lastName     String
  phone        String?
  role         String        @default("client") // client, admin
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  messages     Message[]
  reservations Reservation[]
}

model Reservation {
  id              String   @id @default(cuid())
  guestName       String
  firstName       String
  lastName        String
  email           String
  phone           String
  checkIn         DateTime
  checkOut        DateTime
  guests          Int
  totalPrice      Float
  status          String   @default("pending")
  paymentStatus   String?  @default("none")
  stripePaymentId String?
  depositAmount   Float?
  message         String?
  userId          String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User?    @relation(fields: [userId], references: [id])
}

model Message {
  id          String   @id @default(cuid())
  subject     String
  content     String
  fromUserId  String?
  fromEmail   String
  fromName    String
  isFromAdmin Boolean  @default(false)
  read        Boolean  @default(false)
  archived    Boolean  @default(false)
  replyTo     String?
  createdAt   DateTime @default(now())
  fromUser    User?    @relation(fields: [fromUserId], references: [id])
}

model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model BookedPeriod {
  id        String   @id @default(cuid())
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
}

model SeasonPeriod {
  id              String   @id @default(cuid())
  name            String   // ex: "Vacances de Noël 2024", "Février 2025"
  startDate       DateTime
  endDate         DateTime
  seasonType      String   // "high" ou "low"
  pricePerNight   Float    // Prix par nuit pour cette période
  minimumStay     Int      // Nombre de nuits minimum
  sundayToSunday  Boolean  @default(false) // Si vrai, uniquement dimanche à dimanche
  year            Int      // Année pour faciliter les requêtes
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model PricingSettings {
  id              String   @id @default(cuid())
  cleaningFee     Float    @default(450)
  linenPerPerson  Float    @default(25)
  depositAmount   Float    @default(1500)
  defaultHighSeasonPrice Float @default(410)
  defaultLowSeasonPrice  Float @default(310)
  defaultMinimumStay     Int   @default(3)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
