// Test simple de l'API
async function testSimple() {
  try {
    console.log('üß™ Test simple de l\'API...');
    
    // Test 1: Cr√©er un utilisateur
    const response = await fetch('http://localhost:3000/api/auth/register', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        email: 'simple-test@example.com',
        password: 'password123',
        firstName: 'Simple',
        lastName: 'Test'
      })
    });
    
    const result = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ Utilisateur cr√©√© avec succ√®s:', result);
    } else {
      console.log('‚ö†Ô∏è  Erreur (normale si utilisateur existe d√©j√†):', result);
    }

    // Test 2: Login
    const loginResponse = await fetch('http://localhost:3000/api/auth/login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        email: 'simple-test@example.com',
        password: 'password123'
      })
    });
    
    const loginResult = await loginResponse.json();
    
    if (loginResponse.ok) {
      console.log('‚úÖ Connexion r√©ussie pour:', loginResult.user.email);
    } else {
      console.log('‚ùå Erreur de connexion:', loginResult);
    }

    // Test 3: Cr√©er une r√©servation
    const reservationResponse = await fetch('http://localhost:3000/api/reservations', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        guestName: 'Test Reservation',
        firstName: 'Test',
        lastName: 'Reservation', 
        email: 'test-reservation@example.com',
        phone: '+33123456789',
        checkIn: '2024-12-20T15:00:00Z',
        checkOut: '2024-12-22T11:00:00Z',
        guests: 2,
        totalPrice: 250.00,
        message: 'Test de r√©servation via API'
      })
    });

    const reservationResult = await reservationResponse.json();
    
    if (reservationResponse.ok) {
      console.log('‚úÖ R√©servation cr√©√©e avec succ√®s:', reservationResult.id);
    } else {
      console.log('‚ùå Erreur de r√©servation:', reservationResult);
    }

    // Test 4: R√©cup√©rer les r√©servations
    const getReservationsResponse = await fetch('http://localhost:3000/api/reservations');
    const reservations = await getReservationsResponse.json();
    
    if (getReservationsResponse.ok) {
      console.log(`‚úÖ ${reservations.length} r√©servation(s) trouv√©e(s) dans la base`);
    } else {
      console.log('‚ùå Erreur r√©cup√©ration r√©servations:', reservations);
    }

  } catch (error) {
    console.log('‚ùå Erreur r√©seau:', error.message);
  }
}

testSimple();